# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: taisgrupo6unsa
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: taisgrupo6examen2
# "service" is the name of this project. This will also be added to your AWS resource names.
service: register-product

stages:
  default:
    params:
      tableProductsName: "products-table-${sls:stage}"

plugins:
  - serverless-wsgi
  - serverless-python-requirements

custom:
  tableProductsName: 'products-table-${self:provider.stage}'
  wsgi:
    app: app.app
    packRequirements: false
  pythonRequirements:
    dockerizePip: non-linux

provider:
  name: aws
  runtime: python3.12
  stage: dev
  region: us-east-1
  apiGateway:
    restApiId: 7wygl76pj7  # ID del API Gateway existente
    restApiRootResourceId: chxx1tel1f  # ID del recurso ra√≠z en el API Gateway
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - lambda:InvokeFunction
          Resource:
            - Fn::GetAtt: [ProductsTable, Arn]
            - "*"
  environment:
    PRODUCTS_TABLE: ${param:tableProductsName}
    LAMBDA_NAME: validate-${self:provider.stage}-validateProduct
    JWT_SECRET_KEY: fdelgadov

functions:
  createProduct:
    handler: wsgi_handler.handler
    events:
      - http:
          path: /products-create
          method: POST
          cors: true
          authorizer:
            name: auth-${self:service}
            arn:
              - arn:aws:lambda:us-east-1:241533139658:function:auth-dev-auth
            type: request
            identitySource: method.request.header.Authorization
          


resources:
  Resources:
    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: product_id
            AttributeType: S
        KeySchema:
          - AttributeName: product_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${param:tableProductsName}
    # GatewayResponseDefault4XX:
    #   Type: AWS::ApiGateway::GatewayResponse
    #   Properties:
    #     ResponseParameters:
    #       gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
    #     ResponseType: DEFAULT_4XX
    #     RestApiId:
    #       Ref: ApiGatewayRestApi
