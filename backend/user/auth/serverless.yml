# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: fdelgadov
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: taisgrupo6examen2
# "service" is the name of this project. This will also be added to your AWS resource names.
service: auth

stages:
  default:
    params:
      tableName: "employee-users-table-${sls:stage}"

plugins:
  - serverless-wsgi
  - serverless-python-requirements

custom:
  wsgi:
    app: app.app

provider:
  name: aws
  runtime: python3.12
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [UsersTable, Arn]
  environment:
    USERS_TABLE: ${param:tableName}
    JWT_SECRET_KEY: fdelgadov

functions:
  auth:
    handler: authorizer.lambda_handler

  api:
    handler: wsgi_handler.handler
    events:
      - http:
          path: users
          method: POST
      - http:
          path: users/{userId}
          method: GET
          authorizer: auth
      - http:
          path: /{proxy+}
          method: ANY

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${param:tableName}
